# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import drs_protocol_pb2 as drs__protocol__pb2


class JobsManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConnectRequest = channel.unary_unary(
                '/drs_protocol.JobsManager/ConnectRequest',
                request_serializer=drs__protocol__pb2.Request.SerializeToString,
                response_deserializer=drs__protocol__pb2.Response.FromString,
                )
        self.RenderRequest = channel.unary_unary(
                '/drs_protocol.JobsManager/RenderRequest',
                request_serializer=drs__protocol__pb2.Request.SerializeToString,
                response_deserializer=drs__protocol__pb2.Response.FromString,
                )
        self.JobPollRequest = channel.unary_unary(
                '/drs_protocol.JobsManager/JobPollRequest',
                request_serializer=drs__protocol__pb2.Request.SerializeToString,
                response_deserializer=drs__protocol__pb2.JobPollResponseMessage.FromString,
                )
        self.UpdateRoleRequest = channel.unary_unary(
                '/drs_protocol.JobsManager/UpdateRoleRequest',
                request_serializer=drs__protocol__pb2.Request.SerializeToString,
                response_deserializer=drs__protocol__pb2.Response.FromString,
                )
        self.ReportProgressRequest = channel.unary_unary(
                '/drs_protocol.JobsManager/ReportProgressRequest',
                request_serializer=drs__protocol__pb2.Request.SerializeToString,
                response_deserializer=drs__protocol__pb2.Response.FromString,
                )


class JobsManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConnectRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenderRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JobPollRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRoleRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportProgressRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobsManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConnectRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectRequest,
                    request_deserializer=drs__protocol__pb2.Request.FromString,
                    response_serializer=drs__protocol__pb2.Response.SerializeToString,
            ),
            'RenderRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.RenderRequest,
                    request_deserializer=drs__protocol__pb2.Request.FromString,
                    response_serializer=drs__protocol__pb2.Response.SerializeToString,
            ),
            'JobPollRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.JobPollRequest,
                    request_deserializer=drs__protocol__pb2.Request.FromString,
                    response_serializer=drs__protocol__pb2.JobPollResponseMessage.SerializeToString,
            ),
            'UpdateRoleRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRoleRequest,
                    request_deserializer=drs__protocol__pb2.Request.FromString,
                    response_serializer=drs__protocol__pb2.Response.SerializeToString,
            ),
            'ReportProgressRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportProgressRequest,
                    request_deserializer=drs__protocol__pb2.Request.FromString,
                    response_serializer=drs__protocol__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'drs_protocol.JobsManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobsManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConnectRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drs_protocol.JobsManager/ConnectRequest',
            drs__protocol__pb2.Request.SerializeToString,
            drs__protocol__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenderRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drs_protocol.JobsManager/RenderRequest',
            drs__protocol__pb2.Request.SerializeToString,
            drs__protocol__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JobPollRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drs_protocol.JobsManager/JobPollRequest',
            drs__protocol__pb2.Request.SerializeToString,
            drs__protocol__pb2.JobPollResponseMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRoleRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drs_protocol.JobsManager/UpdateRoleRequest',
            drs__protocol__pb2.Request.SerializeToString,
            drs__protocol__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportProgressRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drs_protocol.JobsManager/ReportProgressRequest',
            drs__protocol__pb2.Request.SerializeToString,
            drs__protocol__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
